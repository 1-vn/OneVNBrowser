{
  "title": "Specifiche del modello",
  "basic": "Di base",
  "wildcard": {
    "title": "Wildcard",
    "sharp_info": "Corrisponde ad un singolo carattere numerico(0-9) (interpretato come '\\d')",
    "question_info": "Corrisponde a qualsiasi carattere singolo (interpretato come '.')",
    "asterisk_info": "Corrisponde a qualsiasi zero o più caratteri (interpretato come '.*')",
    "plus_info": "Corrisponde ad uno o più caratteri (interpretati come '.+')",
    "escape": "Se si desidera utilizzare questi caratteri come lettere ordinarie, anteporre la barra rovesciata.",
    "regexp": "Inoltre, puoi usare l'espressione regolare circondando con<code>[]</code>.",
    "case": "Tutti i modelli si distinguono tra lettere maiuscole e minuscole."
  },
  "wildcard_desc": {
    "title": "Descrizione Wildcard",
    "sharp": "Wildcard'#'",
    "sharp_info": "'#' corrisponde a 0-9 uno dei numeri.",
    "sharp_ex1": "ex.1)Stringa modello = <code>IMG#.jpg</code>",
    "sharp_ex1_info": "Se un URL include <code>IMG0.jpg</code> or <code>IMG1.jpg</code> or ... or <code>IMG8.jpg</code> o <code>IMG9.jpg</code>, corrisponde.",
    "sharp_ex1_but": "Nel caso in cui <code>http://www.test.com/IMG.jpg</code>, poiché un numero non viene dopo \"IMG\", questo URL non corrisponde.",
    "sharp_ex2": "ex.2)Stringa modello = <code>IMG###.jpg</code>",
    "sharp_ex2_info": "Se un URL include <code>IMG000.jpg</code> o <code>IMG001.jpg</code> o ... o <code>IMG998.jpg</code> oo <code>IMG999.jpg</code>, corrisponde.",
    "sharp_ex2_but": "Nel caso in cui <code>http://www.test.com/IMG0a1.jpg</code>, poiché non include tre valori numerici consecutivi, questo URL non corrisponde.",
    "question": "Wildcard'?'",
    "question_info": "'?' corrisponde a qualsiasi singolo carattere.",
    "question_ex1": "ex.1)Stringa modello = <code>IMG_?.jpg</code>",
    "question_ex1_info": "Se un URL include l'espressione in cui viene inserito qualche carattere tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
    "question_ex1_ex": "Nel caso di <code>http://www.test.com/IMG_l.jpg</code>, questo URL corrisponde.",
    "question_ex2": "ex.2)Stringa modello = <code>IMG_???.jpg</code>",
    "question_ex2_info": "Questo modello corrisponde all'URL in cui sono inseriti alcuni tre caratteri tra <code>IMG_</code> e <code>.jpg</code>.",
    "asterisk": "Wildcard'*'",
    "asterisk_info": "'*' corrisponde a qualsiasi zero o più caratteri.",
    "asterisk_ex": "ex.)Stringa modello = <code>IMG_*.jpg</code>",
    "asterisk_ex_info": "Se un URL include l'espressione che alcuni zero o più caratteri sono inseriti tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
    "asterisk_ex_info_ex": "Pertanto corrisponde sia a <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
    "plus": "Wildcard'+'",
    "plus_info": "'+' corrisponde a uno o più caratteri.",
    "plus_ex": "ex.)Stringa modello = <code>IMG_+.jpg</code>",
    "plus_ex_info": "Se un URL include l'espressione in cui sono inseriti uno o più caratteri tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
    "plus_ex_not": "Pertanto corrisponde sia a <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
    "plus_ex_then": "Non corrisponde, se non c'è niente tra <code>IMG_</code> e <code>.jpg</code>.",
    "regexp": "Espressione regolare",
    "regexp_info": "Il modello racchiuso tra '[]' viene trattato come un'espressione regolare.<br>Le espressioni regolari sono conformi alle specifiche Java.",
    "regexp_ex": "ex.)<code>[https?://www\\.test\\.com/IMG_*\\.jpg]</code>"
  },
  "pattern": {
    "title": "Corrispondenza modelli",
    "info": "Se non si applica uno schema come <code>http://</code>, sarà automaticamente integrato (aggiungi <code>^\\w+://</code>)",
    "ex": "Se crei un modello come <code>*test.com</code>, corrisponderà all'URL, come ad esempio <code>http://other.com/?page=test.com</code>.",
    "sub_domain": "Se si desidera sostituire un sottodominio",
    "sub_domain_info": "Inizia con <code>*.</code>or <code>http://*.</code>. (Sostituire <code>*.</code> con <code>((?![./]).)*</code>)",
    "sub_domain_ex": "ex.)Stringa modello =<code>*.test.com</code>",
    "sub_domain_match": "Corrisponde a <code>mobile.test.com</code>, <code>doc.test.com</code>",
    "sub_domain_not": "Tuttavia, <code>mobile.doc.test.com</code> non corrisponde perché contiene il sottodominio<code>.</code>.",
    "https": "Se il modello inizia con <code>http*://</code>",
    "https_info": "Questo non è necessario perché questa parte è automaticamente completata dal browser.",
    "https_replace": "Questa descrizione sarà sostituita internamente da <code>https?://</code> per evitare falsi positivi."
  },
  "ad_block": {
    "title": "Ad block",
    "not_wildcard": "Se non si utilizzano wildcard, sarà più veloce.",
    "not_regex": "Inoltre, le prestazioni sono peggiori se esiste un modello complesso nell'espressione regolare.",
    "not_use_wildcard": "Se non usi wildcard wildcard(<code>#?*+</code>)",
    "not_use_wildcard_info": "Se c'è una stringa specifica nell'URL, bloccala.",
    "not_use_wildcard_ex": "ex.)Stringa modello =<code>ad.jpg</code>",
    "not_use_wildcard_ex_info": "Blocca <code>http://test.com/ad/ad.jpg</code>, <code>https://test.jp/ad/img/ad.jpg</code> etc.",
    "use_wildcard": "Se non usi wildcard(<code>#?*+</code>)",
    "use_wildcard_info": "ex.)Stringa modello =<code>/ad/+.jpg</code>",
    "host": "Blocco Host",
    "host_info": "Blocca tutti gli host specificati.",
    "host_perfect": "Corrispondenza perfetta",
    "host_perfect_info": "<code>h ad.test.com</code> Specifica mettendo uno spazio dopo la 'h'.",
    "host_perfect_info_ex": "E' utile per bloccare <code>http://ad.test.com</code> senza bloccare <code>http://test.com</code>.",
    "host_perfect_info_wildcard": "Anche le Wild cards possono essere utilizzate.",
    "host_perfect_ex": "ex.)<code>h ad.+.com</code>, <code>h ad.test.*</code>",
    "host_perfect_hosts": "<code>127.0.0.1 ad.com</code> può anche essere specificato in un formato host, come da esempio.",
    "host_partial": "Corrispondenza parziale",
    "host_partial_info": "<code>c ad.com</code> Specifica mettendo uno spazio dopo la 'c'.",
    "host_partial_info_ex": "Blocca <code>http://ad.com</code>, <code>http://abc.ad.com</code>, <code>http://ad001.ad.com</code> etc.",
    "host_partial_not_wildcard": "<font color=\"red\">Le Wild cards NON possono essere utilizzate.</font>",
    "host_regex": "Quando si utilizzano espressioni regolari nel blocco host",
    "host_regex_info": "<code>h [test\\.com]</code> può essere specificato."
  }
}