{
  "title": "Especificação de padrão",
  "basic": "Básico",
  "wildcard": {
    "title": "Curinga",
    "sharp_info": "Corresponde a um único caractere (0-9)númerico (interpretado como '\\d')",
    "question_info": "Corresponde a qualquer caractere único (interpretado como '.')",
    "asterisk_info": "Corresponde a zero ou mais caracteres (interpretados como '.*')",
    "plus_info": "Corresponde a qualquer um ou mais caracteres (interpretados como '.+')",
    "escape": "Se você quiser usar estes caracteres como letras comuns, preceda com barra invertida.",
    "regexp": "Além disso, você pode usar a expressão regular ao circundar com<code>[]</code>.",
    "case": "Todos padrões são distinguidos entre letras maiúsculas e minúsculas."
  },
  "wildcard_desc": {
    "title": "Descrição do curinga",
    "sharp": "Curinga'#'",
    "sharp_info": "'#' corresponde a um dos números 0-9.",
    "sharp_ex1": "ex.1)Cadeia padrão = <code>IMG#.jpg</code>",
    "sharp_ex1_info": "Se um URL inclui <code>IMG0.jpg</code> ou <code>IMG1.jpg</code> ou ... ou <code>IMG8.jpg</code> ou <code>IMG9.jpg</code>, ele é correspondido.",
    "sharp_ex1_but": "No caso de <code>http://www.test.com/IMG.jpg</code>, devido um número não vir após &quot;IMG&quot;, este URL não é correspondido.",
    "sharp_ex2": "ex.2)Cadeia padrão = <code>IMG###.jpg</code>",
    "sharp_ex2_info": "Se um URL inclui <code>IMG000.jpg</code> ou <code>IMG001.jpg</code> ou ... ou <code>IMG998.jpg</code> ou <code>IMG999.jpg</code>, ele é correspondido.",
    "sharp_ex2_but": "No caso de <code>http://www.test.com/IMG0a1.jpg</code>, devido ele não incluir três valores numéricos consecutivos, este URL não é correspondido.",
    "question": "Curinga'?'",
    "question_info": "'?' corresponde a qualquer caractere único.",
    "question_ex1": "ex.1)Cadeia padrão = <code>IMG_?.jpg</code>",
    "question_ex1_info": "Se um URL inclui a expressão que algum caractere é inserido entre <code>IMG_</code> e <code>.jpg</code>, ele é correspondido.",
    "question_ex1_ex": "No caso de <code>http://www.test.com/IMG_l.jpg</code>, este URL é correspondido.",
    "question_ex2": "ex.2)Cadeia padrão = <code>IMG_???.jpg</code>",
    "question_ex2_info": "Este padrão corresponde ao URL que alguns três caracteres são inseridos entre <code>IMG_</code> e <code>.jpg</code>.",
    "asterisk": "Curinga'*'",
    "asterisk_info": "'*' corresponde a qualquer zero ou mais caracteres.",
    "asterisk_ex": "ex.)Cadeia padrão = <code>IMG_*.jpg</code>",
    "asterisk_ex_info": "Se um URL inclui a expressão que algum zero ou mais caracteres é inserido entre <code>IMG_</code> e <code>.jpg</code>, ele é correspondido.",
    "asterisk_ex_info_ex": "Portanto, ele corresponde a ambos de <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
    "plus": "Curinga'+'",
    "plus_info": "'+' corresponde a qualquer um ou mais caracteres.",
    "plus_ex": "ex.)Cadeia padrão = <code>IMG_+.jpg</code>",
    "plus_ex_info": "Se um URL inclui a expressão que um ou mais caracteres é inserido entre <code>IMG_</code> e <code>.jpg</code>, ele é correspondido.",
    "plus_ex_not": "Portanto, ele corresponde a ambos de <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
    "plus_ex_then": "Ele não corresponde, se não houver nada entre <code>IMG_</code> e <code>.jpg</code>.",
    "regexp": "Expressão regular",
    "regexp_info": "O padrão incluído em '[ ]' é tratado como uma expressão regular.<br>Expressões regulares estão em conformidade com as especificações do Java.",
    "regexp_ex": "ex.)<code>[https?://www\\.test\\.com/IMG_*\\.jpg]</code>"
  },
  "pattern": {
    "title": "Correspondência de padrão",
    "info": "Se você não aplicar um esquema como <code>http://</code>, ele será automaticamente complementado.(adicione <code>^\\w+://</code>)",
    "ex": "Se você fizer um padrão como <code>*test.com</code>, ele corresponderá ao URL, como <code>http://other.com/?page=test.com</code>.",
    "sub_domain": "Se você quiser substituir um subdomínio",
    "sub_domain_info": "Inicie com <code>*.</code>ou <code>http://*.</code>. (substitua <code>*.</code> com <code>((?![./]).)*</code>)",
    "sub_domain_ex": "ex.)Cadeia padrão =<code>*.test.com</code>",
    "sub_domain_match": "Corresponde a <code>mobile.test.com</code>, <code>doc.test.com</code>",
    "sub_domain_not": "Contudo, <code>mobile.doc.test.com</code> não corresponde porque o subdomínio contém <code>.</code>.",
    "https": "Se o padrão inicia com <code>http*://</code>",
    "https_info": "Isto não é necessário porque esta parte é automaticamente complementada pelo navegador.",
    "https_replace": "Esta descrição será substituída internamente com <code>https?://</code> para prevenir falsos positivos."
  },
  "ad_block": {
    "title": "Bloqueio de anúncio",
    "not_wildcard": "Se você não usar curinga, será mais rápido.",
    "not_regex": "Além disso, o desempenho é pior se houver um padrão complexo na expressão regular.",
    "not_use_wildcard": "Se você não usar curinga(<code>#?*+</code>)",
    "not_use_wildcard_info": "Se houver uma cadeia especificada no URL, bloqueie-a.",
    "not_use_wildcard_ex": "ex.)Cadeia padrão =<code>ad.jpg</code>",
    "not_use_wildcard_ex_info": "Bloqueia <code>http://test.com/ad/ad.jpg</code>, <code>https://test.jp/ad/img/ad.jpg</code> etc.",
    "use_wildcard": "Se você não usar curinga(<code>#?*+</code>)",
    "use_wildcard_info": "ex.)Cadeia padrão =<code>/ad/+.jpg</code>",
    "host": "Bloqueio de host",
    "host_info": "Bloqueia todos hosts especificados.",
    "host_perfect": "Correspondência perfeita",
    "host_perfect_info": "<code>h ad.test.com</code> Especifique colocar um espaço após o 'h', tal como.",
    "host_perfect_info_ex": "Isto é útil para bloquear <code>http://ad.test.com</code> sem bloquear <code>http://test.com</code>.",
    "host_perfect_info_wildcard": "Curingas também podem ser usados.",
    "host_perfect_ex": "ex.)<code>h ad.+.com</code>, <code>h ad.test.*</code>",
    "host_perfect_hosts": "<code>127.0.0.1 ad.com</code> também pode ser especificado num formato de host, tal como.",
    "host_partial": "Correspondência parcial",
    "host_partial_info": "<code>c ad.com</code> Especifique colocar um espaço após o 'c', tal como.",
    "host_partial_info_ex": "Bloqueia <code>http://ad.com</code>, <code>http://abc.ad.com</code>, <code>http://ad001.ad.com</code> etc.",
    "host_partial_not_wildcard": "<font color=\"red\">Curingas NÃO podem ser usados.</font>",
    "host_regex": "Ao usar expressões regulares no bloqueio de host",
    "host_regex_info": "<code>h [test\\.com]</code> pode ser especificado tal como."
  }
}